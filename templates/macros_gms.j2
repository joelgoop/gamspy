{#
gamspy - Build and run GAMS models from Python
Copyright (C) 2014 Joel Goop

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#}

{# Render general definition #}
{% macro render_definitions(type,items) -%}
{% set items = items|list %}
{%- if items -%}
{{ type|upper }}
{%- for item in items %}
    {{ item.name }}{{ render_indices(item.indices) }}
{%- endfor %}
;
{%- endif %}
{%- endmacro %}

{# Render variable definitions including type #}
{% macro render_variable_defs(vars) -%}
{%- for vtype in ['positive','binary'] -%}
{{ render_definitions('%s variables' % vtype, vars.values()|select_vtype(vtype)) }}
{% endfor -%}
{{ render_definitions('variables', vars.values()|select_vtype("free")) }}
{%- endmacro %}

{# Render set definitions in correct order so that subsets can be defined #}
{% macro render_set_defs(sets,aliases) %}
* Sets
{{ render_definitions("sets",sets.values()|rejectattr("indices","contains_from",aliases.values())|sort(attribute="level")) }}
* Aliases
{{ render_aliases(aliases.values()) }}
* Sets with alias indices
{{ render_definitions("sets",sets.values()|selectattr("indices","contains_from",aliases.values())|sort(attribute="level")) }}
{% endmacro %}

{# Render limits for variables #}
{% macro render_variable_lims(vars) -%}
{% for lim in ['up','lo','l','fx'] -%}
{% for var in vars.values() -%}
{% if var.get_lim(lim) is not none %}{{ var|attr(lim) }} = {{ var.get_lim(lim) }};
{% endif %}
{%- endfor %}
{%- endfor %}
{%- endmacro %}

{# Render a comment with section title #}
{% macro section_title(title) -%}
*****************************************
*** {{ title|upper }}
*****************************************
{%- endmacro -%}

{# Render equations #}
{% macro render_equations(items) -%}
{%- for item in items.values() -%}
{{ item.name }}{{ render_indices(item.indices) }}{% if item.conditional %}$({{ item.conditional|string }}){% endif %}..
    {{ item|string|wordwrap(width=67,break_long_words=False,wrapstring='\n            ') }};

{% endfor %}
{%- endmacro %}

{# Render aliases #}
{% macro render_aliases(items) %}
{%- for item in items -%}
ALIAS({{ item.aliasof.no_indices }},{{ item.name }});
{%- endfor %}
{%- endmacro %}

{# Render indices, with replace #}
{% macro render_indices(indices,replacements=None) -%}
{% if indices -%}
({% for ind in indices|custom_replace(replacements) -%}
{{ ind.no_indices }}{% if not loop.last %},{% endif %}
{%- endfor %})
{%- endif %}
{%- endmacro %}