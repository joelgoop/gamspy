{#
gamspy - Build and run GAMS models from Python
Copyright (C) 2014 Joel Goop

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#}

{%- if title %}
$title {{ title }}
{%- endif %}
$ontext
{%- if title %}
Title: {{ title }}
{%- endif %}
Author: {{ author if author else 'Joel Goop' }}
{%- if description is defined %}

{{ description}}
{%- endif %}
$offtext
{%- import "macros_gms.j2" as macros %}

{% block set_def %}
{{ macros.section_title("set definitions")}}
* Sets
{{ macros.render_definitions("sets",sets.values()|selectattr("indices", "none")) }}
* Aliases
{{ macros.render_aliases(aliases.values()) }}
* Subsets
{{ macros.render_definitions("sets",sets.values()|rejectattr("indices", "none")) }}
{% endblock %}

{% block param_def %}
{{ macros.section_title("parameter definitions")}}
{{ macros.render_definitions("parameters",parameters.values())}}
{% endblock %}

{% block gdx_load %}
{{ macros.section_title("load gdx data")}}
$onundf
$gdxin '{{ data_file|replace('/','\\') }}'
* Load sets
$load {{ sets.values()|selectattr("indices", "none")|join(',',attribute='no_indices') }}
* Load subsets
$load {{ sets.values()|rejectattr("indices", "none")|join(',',attribute='no_indices') }}
* Load parameters
$load {{ parameters.values()|join(',',attribute='no_indices') }}
$gdxin
$offundf
{% endblock %}

{{ macros.section_title("variable definitions")}}
{{ macros.render_variable_defs(variables)}}

{{ macros.section_title("variable limits")}}
{{ macros.render_variable_lims(variables)}}

{{ macros.section_title("equation definitions")}}
{{ macros.render_definitions("equations",equations.values())}}

{{ macros.section_title("model equations") }}
{{ macros.render_equations(equations) }}

{% block model_def %}MODEL {{ name }} / all /;{% endblock %}

{% for op,val in options.items() -%}
{{ name }}.{{ op }} = {{ val }};
{% endfor %}

{% block solve %}SOLVE {{ name }} using {{ model_type }} {% if maximize %}maximizing{% else %}minimizing{% endif %} {{ obj_var.name }};{% endblock %}

{% block dump %}
{% if out_file -%}
EXECUTE_UNLOAD '{{ out_file|replace('/','\\') }}';
{%- endif %}
{% endblock %}